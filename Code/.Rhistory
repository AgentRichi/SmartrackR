library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
###########################
# STEP 2: Clean the data
###########################
if(nrow(buses)!=0) {
source('..\\Code\\cleanBuses.R')
###########################
# STEP 3: Assign Bus Routes
###########################
source('..\\Code\\assignRoutes.R')
###########################
# STEP 4: Calculate Metrics
###########################
source('..\\Code\\calculateMetrics.R')
}
#######################
# STEP 5: Load Tables
#######################
#CODE FOR RRB TABLE
source('..\\Code\\railRep.R')
#remove uneccessary variables
remove(list=setdiff(ls(),c("railRep")))
gc()
if (nrow(railRep)>0) {
#CODE FOR TRAVEL TIMES TABLE
source('..\\Code\\travelTimes.R')
#CODE FOR JOURNEY TIMES TABLE
source('..\\Code\\journeyTimes.R')
#Refresh/create files with yesterdays and todays Peak travel information
source('..\\Code\\writeFile.R')
}
library(dplyr)
install.packages('dplyr')
install.packages("dplyr")
install.packages("dplyr")
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
###########################
# STEP 2: Clean the data
###########################
if(nrow(buses)!=0) {
source('..\\Code\\cleanBuses.R')
###########################
# STEP 3: Assign Bus Routes
###########################
source('..\\Code\\assignRoutes.R')
###########################
# STEP 4: Calculate Metrics
###########################
source('..\\Code\\calculateMetrics.R')
}
#######################
# STEP 5: Load Tables
#######################
#CODE FOR RRB TABLE
source('..\\Code\\railRep.R')
#remove uneccessary variables
remove(list=setdiff(ls(),c("railRep")))
gc()
if (nrow(railRep)>0) {
#CODE FOR TRAVEL TIMES TABLE
source('..\\Code\\travelTimes.R')
#CODE FOR JOURNEY TIMES TABLE
source('..\\Code\\journeyTimes.R')
#Refresh/create files with yesterdays and todays Peak travel information
source('..\\Code\\writeFile.R')
}
View(railRep)
librry(data.table)
library(data.table)
railRep <- fread('C:/Data/railRep.csv')
travel_times <- fread('C:/Data/travel_times.csv')
journey_times <- fread('C:/Data/journey_times.csv')
railRep <- railRep[departure>as.Date('2018-12-01')]
travel_times <- travel_times[Departure>as.Date('2018-12-01')]
journey_times <- journey_times[Date>as.Date('2018-12-01')]
table(journey_times$Date)
railRep$period <- ifelse(railRep$departure < as.Date('2019-02-01'),'Dec/Jan19','Apr19')
View(railRep)
travel_times$period <- ifelse(travel_times$Departure < as.Date('2019-02-01'),'Dec/Jan19','Apr19')
journey_times$period <- ifelse(journey_times$Date < as.Date('2019-02-01'),'Dec/Jan19','Apr19')
figure_1 <- travel_times[,.(period=period,type=type,n=nrow())]
figure_1 <- travel_times[,.(period=period,type=type,n=n())]
?data.table
?n()
figure_1 <- travel_times[,.(period=period,type=type,n())]
figure_1 <- travel_times[,.(period=period,type=type,n=NROW(travel_times))]
View(figure_1)
figure_1 <- travel_times[,.(period=period,type=type,n=nrow(travel_times))]
View(figure_1)
figure_1 <- travel_times[,.(period=period,type=type,n=.N)]
View(figure_1)
figure_1 <- travel_times[,.(period=period,type=type,n=.N),type]
View(figure_1)
figure_1 <- travel_times[,.(period=period,type=type,n=.N),c(type,period)]
figure_1 <- travel_times[,.(period=period,type=type,n=.N),.(type,period)]
View(figure_1)
figure_1 <- travel_times[,n=.N,.(type,period)]
figure_1 <- travel_times[,.(n=.N),.(type,period)]
View(figure_1)
fwrite(figure_1,'..\\Charts\\busCount.csv')
View(figure_1)
install.packages('htmlwidgets')
install.packages('DT')
DT
library(DT)
library(htmlwidgets)
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
###########################
# STEP 2: Clean the data
###########################
if(nrow(buses)!=0) {
source('..\\Code\\cleanBuses.R')
###########################
# STEP 3: Assign Bus Routes
###########################
source('..\\Code\\assignRoutes.R')
###########################
# STEP 4: Calculate Metrics
###########################
source('..\\Code\\calculateMetrics.R')
}
#######################
# STEP 5: Load Tables
#######################
#CODE FOR RRB TABLE
source('..\\Code\\railRep.R')
#remove uneccessary variables
remove(list=setdiff(ls(),c("railRep")))
gc()
if (nrow(railRep)>0) {
#CODE FOR TRAVEL TIMES TABLE
source('..\\Code\\travelTimes.R')
#CODE FOR JOURNEY TIMES TABLE
source('..\\Code\\journeyTimes.R')
#Refresh/create files with yesterdays and todays Peak travel information
source('..\\Code\\writeFile.R')
}
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
install.packages('rJava')
library(rJava)
library(xlsx)
library(rJava)
library(xlsx)
install.packages('rJava')
library(xlsx)
libary(rJava)
library(rJava)
Sys.getenv()
Sys.getenv()
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
list.files()
c(list.files(),list.files('..\\Data\\'))
c(list.files(),list.files('..\\Input\\'))
tfv_file <- c(list.files("..\\Data\\"),list.files("..\\Dropbox\\"))
tfv_file
buses <- data.frame()
numFiles <- length(tfv_file)
if(numFiles>0) {
for(i in 1:numFiles)
{
buses <- rbind(buses,suppressWarnings(fread(tfv_file[i],
select = c(1:7))))
}
names(buses) <- gsub("[ ^[:blank:]:()+?&/\\-]", ".", names(buses))
buses <- unique(buses)
routes <- read.xlsx("..\\Input\\BusRoutes.xlsx",
sheetName = "BusRoutes",
stringsAsFactors=FALSE,
as.data.frame = T) %>% na.omit()
}
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
tfv_file <- c(list.files("..\\Data\\"),list.files("..\\Dropbox\\Data\\"))
tfv_file
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
#Load all data
tfv_file <- c(list.files("..\\Data\\"),list.files("..\\Dropbox\\Data\\"))
buses <- data.frame()
numFiles <- length(tfv_file)
if(numFiles>0) {
for(i in 1:numFiles)
{
buses <- rbind(buses,suppressWarnings(fread(tfv_file[i],
select = c(1:7))))
}
names(buses) <- gsub("[ ^[:blank:]:()+?&/\\-]", ".", names(buses))
buses <- unique(buses)
routes <- read.xlsx("..\\Input\\BusRoutes.xlsx",
sheetName = "BusRoutes",
stringsAsFactors=FALSE,
as.data.frame = T) %>% na.omit()
}
tfv_file
tfv_file <- c(list.files("..\\Data\\"),list.files("..\\Dropbox\\Data\\"))
buses <- data.frame()
numFiles <- length(tfv_file)
test <- fread(tfv_file[],
select = c(1:7))
test <- fread(tfv_file[1],
select = c(1:7))
tfv_file <- list.files("..\\Data\\")
tfv_file2 <- list.files("..\\Dropbox\\Data\\")
buses <- data.frame()
numFiles <- length(c(tfv_file,tfv_file2))
numFiles
buses
length(buses)
###########################
# STEP 1: Load the data
###########################
#Load all data
tfv_file <- list.files("..\\Data\\")
tfv_file2 <- list.files("..\\Dropbox\\Data\\")
buses <- data.frame()
buses2 <- data.frame()
if(length(tfv_file)>0) {
for(i in 1:length(tfv_file))
{
buses <- rbind(buses,suppressWarnings(fread(tfv_file[i],
select = c(1:7))))
}
}
if(length(tfv_file2)>0) {
for(i in 1:length(tfv_file2))
{
buses <- rbind(buses,suppressWarnings(fread(tfv_file2[i],
select = c(1:7))))
}
}
###########################
# STEP 1: Load the data
###########################
#Load all data
tfv_file <- list.files("..\\Data\\")
tfv_file2 <- list.files("..\\Dropbox\\Data\\")
buses <- data.frame()
buses2 <- data.frame()
if(length(tfv_file)>0) {
setwd("..\\Data\\")
for(i in 1:length(tfv_file))
{
buses <- rbind(buses,suppressWarnings(fread(tfv_file[i],
select = c(1:7))))
}
}
if(length(tfv_file2)>0) {
setwd("..\\Dropbox\\Data\\")
for(i in 1:length(tfv_file2))
{
buses <- rbind(buses,suppressWarnings(fread(tfv_file2[i],
select = c(1:7))))
}
setwd("..\\")
}
if (length(buses)>0) {
names(buses) <- gsub("[ ^[:blank:]:()+?&/\\-]", ".", names(buses))
buses <- unique(buses)
routes <- read.xlsx("..\\Input\\BusRoutes.xlsx",
sheetName = "BusRoutes",
stringsAsFactors=FALSE,
as.data.frame = T) %>% na.omit()
}
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
setwd("..\\")
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
setwd("\\Code")
setwd("Code")
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
rm(list=ls(all=TRUE))
# Run next 3 lines only if using source() to run the script
work_dir <- dirname(parent.frame(2)$ofile)
setwd(work_dir)
setwd(getwd())
library(dplyr)
library(magrittr)
library(lubridate)
library(xlsx)
library(data.table)
library(filesstrings)
###########################
# STEP 1: Load the data
###########################
source('..\\Code\\readFile.R')
###########################
# STEP 2: Clean the data
###########################
if(nrow(buses)!=0) {
source('..\\Code\\cleanBuses.R')
###########################
# STEP 3: Assign Bus Routes
###########################
source('..\\Code\\assignRoutes.R')
###########################
# STEP 4: Calculate Metrics
###########################
source('..\\Code\\calculateMetrics.R')
}
#######################
# STEP 5: Load Tables
#######################
#CODE FOR RRB TABLE
source('..\\Code\\railRep.R')
#remove uneccessary variables
remove(list=setdiff(ls(),c("railRep")))
gc()
if (nrow(railRep)>0) {
#CODE FOR TRAVEL TIMES TABLE
source('..\\Code\\travelTimes.R')
#CODE FOR JOURNEY TIMES TABLE
source('..\\Code\\journeyTimes.R')
#Refresh/create files with yesterdays and todays Peak travel information
source('..\\Code\\writeFile.R')
}
setwd("..\\Data\\")
tfv_file <- list.files()
numFiles <- length(tfv_file)
if(numFiles>0) {
for(i in 1:numFiles)
{
file.rename(tfv_file[i],paste0(Sys.Date(),"_",i,"_OneDrive.csv"))
if (file.exists(paste0(Sys.Date(),"_",i,"_OneDrive.csv"))) {
file.move(paste0(Sys.Date(),"_",i,"_OneDrive.csv"),"..\\Data_hist")
}
}
}
setwd("..\\Dropbox\\Data\\")
tfv_file <- list.files()
numFiles <- length(tfv_file)
if(numFiles>0) {
for(i in 1:numFiles)
{
file.rename(tfv_file[i],paste0(Sys.Date(),"_",i,"_DropBox.csv"))
if (file.exists(paste0(Sys.Date(),"_",i,"_DropBox.csv"))) {
file.move(paste0(Sys.Date(),"_",i,"_DropBox.csv"),"..\\..\\Data_hist")
}
}
}
setwd("..\\")
